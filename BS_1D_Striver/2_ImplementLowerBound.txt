 https://www.geeksforgeeks.org/problems/floor-in-a-sorted-array-1587115620/1?track=DSASP-Searching&amp%253BbatchId=154&utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=floor-in-a-sorted-array
    
Floor in a Sorted Array
Difficulty: EasyAccuracy: 33.75%Submissions: 275K+Points: 2
Given a sorted array arr[] of size n without duplicates, and given a value x. Floor of x is defined as the largest element k in arr[] such that k is smaller than or equal to x. Find the index of k(0-based indexing).

Examples

Input: n = 7, x = 0 arr[] = {1,2,8,10,11,12,19}
Output: -1
Explanation: No element less than 0 is found. So output is "-1".
Input: n = 7, x = 5 arr[] = {1,2,8,10,11,12,19}
Output: 1
Explanation: Largest Number less than 5 is 2 (i.e k = 2), whose index is 1(0-based indexing).


-------Floor find karna hai BS Inerview Question Folder solve kiya hai question 


Code for this question : 

class Solution {

    // In this 
    static int findFloor(long arr[], int n, long x) {
        int start = 0; int end = arr.length-1;
        if(x<arr[start]){
            return -1;
        }
        while(start<=end){
            int mid = start+(end-start)/2;  // if the target is present itself thean floor for target is thetarget itself
            if(x==arr[mid]){
                return mid; // index of the middle element
            }
            if(x<arr[mid]){ // small ele in left in asc arr
                end = mid-1;
            }else{
                start = mid+1;
            }
        }
        return end;
    }
}